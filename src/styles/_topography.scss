@use "variables";

@mixin PrimaryTextColor {
    background: linear-gradient(to right, #3282B8, #0059B2);
    -webkit-background-clip: text;
    -webkit-text-fill-color: #0000;
}

@mixin active {
    &:hover {
        background: #032b3a;
        color: #31c9c9;
    }
}

@mixin darkGradient {
    background: #525252;
    background: linear-gradient(to bottom, rgba(82, 82, 82, 1),
            rgba(52, 52, 52, 1));
}


// Text Alignment
.text-center {
    text-align: center !important;
}

.text-start {
    text-align: left !important;
}

.text-end {
    text-align: right !important;
}

.text-justify {
    text-align: justify !important;
}

// text Hierarchy
.text-muted {
    color: rgba(var(--mute-rgb),1)!important;
}
.text-warning{
    color: rgba(var(--warning-rgb),1)!important;
}
.text-danger{
    color: rgba(var(--danger-rgb),1)!important;
}
.text-success{
    color: rgba(var(--success-rgb),1)!important;
}
.text-info{
    color: rgba(var(--info-rgb),1)!important;
}
.text-primary {
    color: rgba(var(--primary-rgb),1)!important;
}
.text-secondary {
    color: rgba(var(--secondary-rgb),1)!important;
}
.text-dark {
    color: rgba(var(--dark-rgb),1)!important;
}
.text-light {
    color: rgba(var(--light-rgb),1)!important;
}
.text-white {
    color: rgba(var(--white-rgb),1)!important;
}



// Badge
.btn:not(.Badge_positioned)>.Badge {
    margin-inline: 0.5rem;
}

/* Note */
.Note {
    position: relative;
    padding: 16px 20px 16px 50px;
    background: variables.$secondaryBg;
    color: variables.$secondary;
    font-size: 0.85rem;
    line-height: 1.4em;
    letter-spacing: 1px;
    border-radius: 10px;
    overflow: hidden;
    word-wrap: break-word;
    word-break: break-all;
    width: calc(100% - 2rem);
    max-width: 992px;
    margin: 1rem auto;

    &::before {
        content: '';
        width: 60px;
        height: 60px;
        background: variables.$primary;
        display: block;
        box-shadow: variables.$shadow;
        border-radius: 50%;
        position: absolute;
        top: -12px;
        left: -12px;
        opacity: .25;
    }

    &::after {
        content: '\002A';
        position: absolute;
        left: 18px;
        top: 16px;
        font-size: 20px;
        min-width: 15px;
        text-align: center
    }

    &.Note_primary {
        // background: linear-gradient(to right, variables.$secondary, variables.$primary);
        background: variables.$primaryBg;
        color: variables.$primary;
    }

    &.Note_danger {
        // background: linear-gradient(to right, variables.$danger-hvr, variables.$danger);
        background: variables.$dangerBg;
        color: variables.$danger;

        &:before {
            background-color: variables.$danger;
        }
    }

    &.Note_warning {
        // background: linear-gradient(to right, variables.$warning-hvr, variables.$warning);
        background: variables.$warningBg;
        color: variables.$warning;

        &:before {
            background-color: variables.$warning;
        }
    }

    &.Note_success {
        // background: linear-gradient(to right, variables.$success-hvr, variables.$success);
        background: variables.$successBg;
        color: variables.$success;

        &:before {
            background-color: variables.$success;
        }
    }

    &.Note_dark {
        // background: linear-gradient(to right, rgba(variables.$dark3, 0.9), variables.$dark);
        // background-color: variables.$dark3 !important;
        background: variables.$darkBg;
        color: variables.$dark;

        &:before {
            background-color: variables.$dark;
        }
    }

    &.Note_info {
        // background: linear-gradient(to right, rgba(variables.$info-hvr, 0.4), rgba(variables.$info, 0.8));
        // background-color: variables.$info-hvr !important;
        background: variables.$infoBg;
        color: variables.$info;

        &:before {
            background-color: variables.$info;
        }
    }

    &.Note_light {
        // background: linear-gradient(to right, rgba(variables.$info-hvr, 0.4), rgba(variables.$info, 0.8));
        // background-color: variables.$info-hvr !important;
        background: variables.$lightBg;
        color: variables.$light;

        &:before {
            background-color: variables.$light;
        }
    }
}

mark,
kbd {
    font-size: 90%;
    overflow-wrap: break-word;
    word-wrap: break-word;
    position: relative;
    color: var(--code-color);
    font-weight: 500;
    font-family: monospace;
    background: var(--code-bg);
    padding: 0.05rem 0.5rem 0.15rem;
    border-radius: 22px;

}